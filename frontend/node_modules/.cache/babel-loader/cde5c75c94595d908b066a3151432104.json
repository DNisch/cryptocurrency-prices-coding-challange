{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/daniel/git/cryptocurrency-prices-coding-challange/frontend/src/pages/CryptoCurrency.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport axios from 'axios';\nimport { Chart } from 'react-charts';\nconst MINUTE = 60000;\n\nconst loadData = (currency, setData) => {\n  axios.get(`/price/${currency}`).then(response => {\n    setData(response.data);\n    console.log(response.data);\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\nexport default function CryptoCurrency({\n  currency\n}) {\n  _s();\n\n  const [data, setData] = React.useState({\n    latest: 0,\n    average: 0,\n    count: 0,\n    history: []\n  });\n  React.useEffect(() => {\n    loadData(currency, setData);\n    const interval = setInterval(() => {\n      loadData(currency, setData);\n    }, MINUTE);\n    return () => clearInterval(interval);\n  }, [currency]);\n  const chartData = React.useMemo(() => [{\n    label: 'Series 1',\n    data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n  }, {\n    label: 'Series 2',\n    data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n  }], []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: 'linear',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"latest: \", data.latest]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"average: \", data.average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      data: chartData,\n      axes: axes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CryptoCurrency, \"zOf0KEe0ogLXcXrXD/0taYhuZSY=\");\n\n_c = CryptoCurrency;\nCryptoCurrency.propTypes = {\n  currency: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoCurrency\");","map":{"version":3,"sources":["/home/daniel/git/cryptocurrency-prices-coding-challange/frontend/src/pages/CryptoCurrency.tsx"],"names":["React","PropTypes","axios","Chart","MINUTE","loadData","currency","setData","get","then","response","data","console","log","catch","error","CryptoCurrency","useState","latest","average","count","history","useEffect","interval","setInterval","clearInterval","chartData","useMemo","label","axes","primary","type","position","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes, { InferProps } from \"prop-types\";\nimport axios from 'axios';\nimport { Chart } from 'react-charts'\n\nconst MINUTE = 60000;\n\nconst loadData = (currency: string, setData: React.Dispatch<React.SetStateAction<any>>) => {\n  axios.get(`/price/${currency}`)\n    .then(response => {\n      setData(response.data);\n      console.log(response.data);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport default function CryptoCurrency ({ currency }: InferProps<typeof CryptoCurrency.propTypes>) {\n  const [data, setData] = React.useState({\n    latest: 0,\n    average: 0,\n    count: 0,\n    history: []\n  });\n\n  React.useEffect(() => {\n    loadData(currency, setData);\n    const interval = setInterval(() => {\n      loadData(currency, setData);\n    }, MINUTE);\n\n    return () => clearInterval(interval);\n  }, [currency]);\n\n  const chartData = React.useMemo(\n    () => [\n      {\n        label: 'Series 1',\n        data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n      },\n      {\n        label: 'Series 2',\n        data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n      }\n    ],\n    []\n  )\n\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: 'linear', position: 'bottom' },\n      { type: 'linear', position: 'left' }\n    ],\n    []\n  )\n\n  return (\n    <div>\n      <h2>latest: {data.latest}</h2>\n      <h2>average: {data.average}</h2>\n      <Chart data={chartData} axes={axes} />\n    </div>\n  )\n}\n\nCryptoCurrency.propTypes = {\n  currency: PropTypes.string.isRequired\n};"]},"metadata":{},"sourceType":"module"}