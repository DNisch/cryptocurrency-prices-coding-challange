{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/daniel/git/cryptocurrency-prices-coding-challange/frontend/src/components/ColorChanger.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './ColorChanger.css';\nexport default function ColorChanger({\n  changeColor,\n  initColor\n}) {\n  _s();\n\n  const [color, setColor] = React.useState(initColor);\n\n  function handleInput(event) {\n    let input = event.currentTarget.value;\n\n    if (!!input && input.match(/#[0-9A-Fa-f]{6}/)) {\n      setColor(input);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Color-Input\",\n      variant: \"outlined\",\n      helperText: \"#[0-9A-F-a-f]{6}\",\n      defaultValue: initColor,\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      size: \"large\",\n      style: {\n        backgroundColor: color\n      },\n      onClick: () => changeColor(color),\n      children: \"Accept Change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ColorChanger, \"+wLU0JIENo1UtA7buCE1DLX47Z8=\");\n\n_c = ColorChanger;\nColorChanger.propTypes = {\n  changeColor: PropTypes.func.isRequired,\n  initColor: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorChanger\");","map":{"version":3,"sources":["/home/daniel/git/cryptocurrency-prices-coding-challange/frontend/src/components/ColorChanger.tsx"],"names":["React","PropTypes","Button","TextField","ColorChanger","changeColor","initColor","color","setColor","useState","handleInput","event","input","currentTarget","value","match","backgroundColor","propTypes","func","isRequired","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsC,YAAtC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,oBAAP;AAEA,eAAe,SAASC,YAAT,CAAuB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAvB,EAA8F;AAAA;;AAC3G,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAeH,SAAf,CAA1B;;AAEA,WAASI,WAAT,CAAsBC,KAAtB,EAAkE;AAChE,QAAIC,KAAa,GAAGD,KAAK,CAACE,aAAN,CAAoBC,KAAxC;;AACA,QAAI,CAAC,CAACF,KAAF,IAAWA,KAAK,CAACG,KAAN,CAAY,iBAAZ,CAAf,EAA+C;AAC7CP,MAAAA,QAAQ,CAACI,KAAD,CAAR;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,UAAU,EAAC,kBAJb;AAKE,MAAA,YAAY,EAAEN,SALhB;AAME,MAAA,QAAQ,EAAEI;AANZ;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE;AAAEM,QAAAA,eAAe,EAAET;AAAnB,OAHT;AAIE,MAAA,OAAO,EAAE,MAAMF,WAAW,CAACE,KAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA9BuBH,Y;;KAAAA,Y;AAgCxBA,YAAY,CAACa,SAAb,GAAyB;AACvBZ,EAAAA,WAAW,EAAEJ,SAAS,CAACiB,IAAV,CAAeC,UADL;AAEvBb,EAAAA,SAAS,EAAEL,SAAS,CAACmB,MAAV,CAAiBD;AAFL,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes, { InferProps } from \"prop-types\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './ColorChanger.css';\n\nexport default function ColorChanger ({ changeColor, initColor }: InferProps<typeof ColorChanger.propTypes>) {\n  const [color, setColor] = React.useState(initColor);\n\n  function handleInput (event: React.ChangeEvent<HTMLInputElement>) {\n    let input: string = event.currentTarget.value;\n    if (!!input && input.match(/#[0-9A-Fa-f]{6}/)) {\n      setColor(input);\n    }\n  }\n\n  return (\n    <div className=\"center\">\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Color-Input\"\n        variant=\"outlined\"\n        helperText=\"#[0-9A-F-a-f]{6}\"\n        defaultValue={initColor}\n        onChange={handleInput}\n      />\n      <Button\n        variant=\"outlined\"\n        size=\"large\"\n        style={{ backgroundColor: color }}\n        onClick={() => changeColor(color)}\n      >\n        Accept Change\n      </Button>\n    </div>\n  )\n}\n\nColorChanger.propTypes = {\n  changeColor: PropTypes.func.isRequired,\n  initColor: PropTypes.string.isRequired\n};"]},"metadata":{},"sourceType":"module"}